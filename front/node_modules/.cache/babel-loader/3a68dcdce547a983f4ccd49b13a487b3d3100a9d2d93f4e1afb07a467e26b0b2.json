{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismay\\\\Desktop\\\\mrm\\\\coins-express-mysql-adminPanel\\\\front\\\\src\\\\Components\\\\Search\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Search.css\";\nimport AdvancedPage from './AdvancedPage//AdvancedPage';\nimport arrow from \"./img/arrow.png\";\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  _s();\n  let {\n    submitForm\n  } = _ref;\n  const [isRotated, setIsRotated] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // const [formValues, setFormValues] = useState({\n  //     search: searchParams.get(\"search\"),\n  //     country: searchParams.get(\"country\"),\n  //     metal: searchParams.get(\"metal\"),\n  //     quality: searchParams.get(\"quality\"),\n  //     fromPrice: searchParams.get(\"fromPrice\"),\n  //     toPrice: searchParams.get(\"toPrice\"),\n  //     fromYear: searchParams.get(\"fromYear\"),\n  //     toYear: searchParams.get(\"toYear\")\n  // })\n  const [formValues, setFormValues] = useState(Object.fromEntries(searchParams.entries())); //___???????\n\n  function handlerRotate() {\n    setIsRotated(prevState => !prevState);\n  }\n  const searchOnChangeHandler = e => {\n    setFormValues(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const submitFormHandler = e => {\n    e.preventDefault();\n    if (Object.keys(formValues).length === 0) {\n      return;\n    }\n    submitForm(formValues);\n    if (isRotated) {\n      handlerRotate();\n    }\n    setFormValues(prevState => ({\n      ...prevState,\n      search: \"\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onChange: searchOnChangeHandler,\n    onSubmit: submitFormHandler,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Input field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"category-input\",\n        name: \"search\",\n        value: formValues.search || '',\n        onChange: searchOnChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-btn\",\n        type: \"submit\",\n        value: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"advance\",\n      onClick: handlerRotate,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Advanced filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: isRotated ? \"rotate\" : \"\",\n        src: arrow,\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), !isRotated ? \"\" : /*#__PURE__*/_jsxDEV(AdvancedPage, {\n      formValues: formValues,\n      searchOnChangeHandler: searchOnChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n// const formData = new FormData(e.target);\n// const formDataToArray = [...formData.entries()]\n\n// const finalData = {}\n// formDataToArray.forEach(item => { // [ country: Canada ]\n//     if (item[1]) {\n//         finalData[item[0]] = item[1]\n//     }\n// })\n\n// setSearchParams(finalData)\n_s(Search, \"b7Hk5EckNhu2qN3s68d7U0rMWUE=\", false, function () {\n  return [useSearchParams];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AdvancedPage","arrow","useSearchParams","jsxDEV","_jsxDEV","Search","_ref","_s","submitForm","isRotated","setIsRotated","searchParams","setSearchParams","formValues","setFormValues","Object","fromEntries","entries","handlerRotate","prevState","searchOnChangeHandler","e","prev","target","name","value","submitFormHandler","preventDefault","keys","length","search","onChange","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ismay/Desktop/mrm/coins-express-mysql-adminPanel/front/src/Components/Search/Search.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport \"./Search.css\"\r\nimport AdvancedPage from './AdvancedPage//AdvancedPage';\r\nimport arrow from \"./img/arrow.png\"\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\nexport default function Search({submitForm}) {\r\n    const [isRotated, setIsRotated] = useState(false);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n   \r\n\r\n    // const [formValues, setFormValues] = useState({\r\n    //     search: searchParams.get(\"search\"),\r\n    //     country: searchParams.get(\"country\"),\r\n    //     metal: searchParams.get(\"metal\"),\r\n    //     quality: searchParams.get(\"quality\"),\r\n    //     fromPrice: searchParams.get(\"fromPrice\"),\r\n    //     toPrice: searchParams.get(\"toPrice\"),\r\n    //     fromYear: searchParams.get(\"fromYear\"),\r\n    //     toYear: searchParams.get(\"toYear\")\r\n    // })\r\n    const [formValues, setFormValues] = useState(Object.fromEntries(searchParams.entries()))       //___???????\r\n\r\n\r\n    function handlerRotate() {\r\n        setIsRotated(prevState => !prevState);\r\n    }\r\n\r\n    const searchOnChangeHandler = (e) => {\r\n        setFormValues(prev => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const submitFormHandler = (e) => {\r\n        e.preventDefault()\r\n        if (Object.keys(formValues).length === 0) {\r\n          return;\r\n        }\r\n        submitForm(formValues)\r\n        if (isRotated) {\r\n            handlerRotate()\r\n          }\r\n          setFormValues(prevState => ({\r\n            ...prevState,\r\n            search: \"\"\r\n          })\r\n          )\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <form onChange={searchOnChangeHandler} onSubmit={submitFormHandler} className=\"form\">\r\n            <label>\r\n                <p>Input field</p>\r\n                <input className=\"category-input\" name=\"search\" value={formValues.search || ''} onChange={searchOnChangeHandler} />\r\n                <input className=\"search-btn\" type=\"submit\" value=\"Search\" />\r\n            </label>\r\n            <div className=\"advance\" onClick={handlerRotate}>\r\n                <span>Advanced filter</span>\r\n                <img className={isRotated ? \"rotate\" : \"\"} src={arrow} alt=\"arrow\" />\r\n            </div>\r\n            {\r\n                !isRotated\r\n                    ? \"\"\r\n                    : <AdvancedPage formValues={formValues} searchOnChangeHandler={searchOnChangeHandler} />\r\n            }\r\n        </form >\r\n    )\r\n}\r\n\r\n\r\n   // const formData = new FormData(e.target);\r\n        // const formDataToArray = [...formData.entries()]\r\n\r\n        // const finalData = {}\r\n        // formDataToArray.forEach(item => { // [ country: Canada ]\r\n        //     if (item[1]) {\r\n        //         finalData[item[0]] = item[1]\r\n        //     }\r\n        // })\r\n\r\n        // setSearchParams(finalData)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}