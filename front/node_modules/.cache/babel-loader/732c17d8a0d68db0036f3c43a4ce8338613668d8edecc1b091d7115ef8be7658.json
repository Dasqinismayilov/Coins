{"ast":null,"code":"const baseUrl = 'http://localhost:3001';\n\n// API cavablarını saxlamaq üçün obyektləri keş edirik\nconst cache = {\n  categories: null,\n  options: null,\n  coins: {},\n  coinDetail: {}\n};\nconst getCategories = async () => {\n  if (cache.categories) {\n    console.log('Using cached categories');\n    return cache.categories;\n  }\n  const res = await fetch(`${baseUrl}/categories`);\n  const data = await res.json();\n  if (res.ok) {\n    cache.categories = data;\n    return data;\n  } else {\n    throw new Error('Failed to fetch categories');\n  }\n};\nconst getOptions = async () => {\n  if (cache.options) {\n    console.log('Using cached options');\n    return cache.options;\n  }\n  const res = await fetch(`${baseUrl}/options`);\n  const data = await res.json();\n  if (res.ok) {\n    cache.options = data;\n    return data;\n  } else {\n    throw new Error('Failed to fetch options');\n  }\n};\nconst getCoin = async id => {\n  if (cache.coins[id]) {\n    console.log(`Using cached coin data for id: ${id}`);\n    return cache.coins[id];\n  }\n  const res = await fetch(`${baseUrl}/all/${id}`);\n  const data = await res.json();\n  if (res.ok) {\n    cache.coins[id] = data;\n    return data;\n  } else {\n    throw new Error('Failed to fetch coin');\n  }\n};\nconst getDetail = async (id, coinId) => {\n  const cacheKey = `${id}-${coinId}`;\n  if (cache.coinDetail[cacheKey]) {\n    console.log(`Using cached detail for id: ${cacheKey}`);\n    return cache.coinDetail[cacheKey];\n  }\n  const res = await fetch(`${baseUrl}/categories/${id}/${coinId}`);\n  const data = await res.json();\n  if (res.ok) {\n    cache.coinDetail[cacheKey] = data;\n    return data;\n  } else {\n    throw new Error('Failed to fetch coin detail');\n  }\n};\nconst getAllCoins = async () => {\n  if (cache.allCoins) {\n    console.log('Using cached all coins');\n    return cache.allCoins;\n  }\n  const res = await fetch(`${baseUrl}/all`);\n  const data = await res.json();\n  cache.allCoins = data;\n  return data;\n};\nconst getSearch = async (categoryId, searchQuery) => {\n  if (categoryId) {\n    if (cache.coins[categoryId]) {\n      console.log(`Using cached category data for id: ${categoryId}`);\n      return cache.coins[categoryId];\n    }\n    const res = await fetch(`${baseUrl}/categories/${categoryId}`);\n    const data = await res.json();\n    if (res.ok) {\n      cache.coins[categoryId] = data;\n      return data;\n    }\n  } else {\n    const res = await fetch(`${baseUrl}/search?${searchQuery}`);\n    const data = await res.json();\n    return data;\n  }\n};\nconst deleteCoin = async id => {\n  try {\n    const res = await fetch(`${baseUrl}/all/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      console.log(`Deleted coin with id: ${id}`);\n      delete cache.coins[id]; // Keşdən silin\n      return true;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst putCoin = async (id, coin) => {\n  try {\n    const res = await fetch(`${baseUrl}/all/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(coin)\n    });\n    const data = await res.json();\n    if (res.ok) {\n      cache.coins[id] = data; // Keşi yeniləyirik\n      return data;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst postCoin = async coin => {\n  try {\n    const res = await fetch(`${baseUrl}/all`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(coin)\n    });\n    const data = await res.json();\n    if (res.ok) {\n      cache.allCoins = null;\n      return data;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst postAcces = async acces => {\n  const res = await fetch(`${baseUrl}/acces`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(acces)\n  });\n  const data = await res.json();\n  return data;\n};\nexport { getAllCoins, getCategories, getCoin, getDetail, getSearch, deleteCoin, putCoin, postCoin, postAcces, getOptions };","map":{"version":3,"names":["baseUrl","cache","categories","options","coins","coinDetail","getCategories","console","log","res","fetch","data","json","ok","Error","getOptions","getCoin","id","getDetail","coinId","cacheKey","getAllCoins","allCoins","getSearch","categoryId","searchQuery","deleteCoin","method","error","putCoin","coin","headers","body","JSON","stringify","postCoin","postAcces","acces"],"sources":["C:/Users/ismay/Desktop/Lahiyə/coin-catalog/front/src/API/Api.js"],"sourcesContent":["const baseUrl = 'http://localhost:3001';\r\n\r\n// API cavablarını saxlamaq üçün obyektləri keş edirik\r\nconst cache = {\r\n  categories: null,\r\n  options: null,\r\n  coins: {},\r\n  coinDetail: {},\r\n};\r\n\r\nconst getCategories = async () => {\r\n  if (cache.categories) {\r\n    console.log('Using cached categories');\r\n    return cache.categories;\r\n  }\r\n  const res = await fetch(`${baseUrl}/categories`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    cache.categories = data;\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch categories');\r\n  }\r\n};\r\n\r\nconst getOptions = async () => {\r\n  if (cache.options) {\r\n    console.log('Using cached options');\r\n    return cache.options;\r\n  }\r\n  const res = await fetch(`${baseUrl}/options`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    cache.options = data;\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch options');\r\n  }\r\n};\r\n\r\nconst getCoin = async (id) => {\r\n  if (cache.coins[id]) {\r\n    console.log(`Using cached coin data for id: ${id}`);\r\n    return cache.coins[id];\r\n  }\r\n  const res = await fetch(`${baseUrl}/all/${id}`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    cache.coins[id] = data;\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch coin');\r\n  }\r\n};\r\n\r\nconst getDetail = async (id, coinId) => {\r\n  const cacheKey = `${id}-${coinId}`;\r\n  if (cache.coinDetail[cacheKey]) {\r\n    console.log(`Using cached detail for id: ${cacheKey}`);\r\n    return cache.coinDetail[cacheKey];\r\n  }\r\n  const res = await fetch(`${baseUrl}/categories/${id}/${coinId}`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    cache.coinDetail[cacheKey] = data;\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch coin detail');\r\n  }\r\n};\r\n\r\nconst getAllCoins = async () => {\r\n  if (cache.allCoins) {\r\n    console.log('Using cached all coins');\r\n    return cache.allCoins;\r\n  }\r\n  const res = await fetch(`${baseUrl}/all`);\r\n  const data = await res.json();\r\n  cache.allCoins = data;\r\n  return data;\r\n};\r\n\r\nconst getSearch = async (categoryId, searchQuery) => {\r\n  if (categoryId) {\r\n    if (cache.coins[categoryId]) {\r\n      console.log(`Using cached category data for id: ${categoryId}`);\r\n      return cache.coins[categoryId];\r\n    }\r\n    const res = await fetch(`${baseUrl}/categories/${categoryId}`);\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      cache.coins[categoryId] = data;\r\n      return data;\r\n    }\r\n  } else {\r\n    const res = await fetch(`${baseUrl}/search?${searchQuery}`);\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n};\r\n\r\nconst deleteCoin = async (id) => {\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all/${id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      console.log(`Deleted coin with id: ${id}`);\r\n      delete cache.coins[id]; // Keşdən silin\r\n      return true;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst putCoin = async (id, coin) => {\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(coin),\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      cache.coins[id] = data; // Keşi yeniləyirik\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst postCoin = async (coin) => {\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(coin),\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      cache.allCoins = null; \r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst postAcces = async (acces) => {\r\n  const res = await fetch(`${baseUrl}/acces`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(acces),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nexport {\r\n  getAllCoins,\r\n  getCategories,\r\n  getCoin,\r\n  getDetail,\r\n  getSearch,\r\n  deleteCoin,\r\n  putCoin,\r\n  postCoin,\r\n  postAcces,\r\n  getOptions,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}