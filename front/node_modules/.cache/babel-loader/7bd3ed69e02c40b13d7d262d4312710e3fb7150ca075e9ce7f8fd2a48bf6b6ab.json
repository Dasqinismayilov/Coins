{"ast":null,"code":"// /* eslint-disable no-unused-vars */\n// import React, { useEffect, useState } from 'react'\n\n// import \"./AdminAddCoin.css\"\n// import { useNavigate } from 'react-router-dom';\n// import { getCategories, postCoin } from '../../API/Api';\n\n// export default function AdminAddCoin() {\n//   const navigate = useNavigate()\n//   const [category, setCategory] = useState(\"\")\n//   const [coin, setCoin] = useState([{\n//     title: '',\n//     category_id: '',\n//     year: '',\n//     price: '',\n//     issuing_country: '',\n//     composition: '',\n//     short_desc: '',\n//     description: '',\n//     quality: '',\n//     weight: '',\n//     image: '',\n//     image2: '',\n//   }]);\n\n//   useEffect(()=>{\n//     getCategories().then((data) => {\n//       setCategory(data);\n//     })\n//   },[])\n\n//   const cancelHandle = (e) => {\n//     e.preventDefault()\n//     navigate(-1);\n//   }\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setCoin(coin => ([{\n//       ...coin[0],\n//       [name]: value,\n//     }]));\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault()\n//     if (coin[0].title !== \"\") {\n//       postCoin(coin[0])\n//       navigate('/admin/list');\n//     }\n//   };\n\n//   const handleUploadImage = (e, imageType) => {\n//     const all=e.target\n//     const originFileObj=all.files[0]\n\n//     const { name, lastModified, type } = originFileObj;\n//     console.log(originFileObj)\n//     const nameArr = name.split('.')\n//     const finalReferenceName = nameArr[0] + lastModified + '.' + nameArr[1]\n//     const storageRef = ref(storage, finalReferenceName);\n\n//     uploadBytes(storageRef, originFileObj).then((snapshot) => {\n//       getDownloadURL(snapshot.ref).then(url => {\n//         console.log(url)\n\n//         if (imageType === 'front') {\n//           setCoin(coin => ([{\n//             ...coin[0],\n//             image: url\n//           }]))\n//         } else {\n//           setCoin(coin => ([{\n//             ...coin[0],\n//             image2: url\n//           }]))\n//         }\n//       })\n//     })\n//   }\n\n//   return (\n//     <div className='add-containet'>\n//       <h1>Admin Panel</h1>\n//       <div className=\"add-datails\">\n//         {coin && coin.map((item, index) => (\n//           <form className='add-form' key={(index)} onSubmit={(e) => handleSubmit(e, item.id)} >\n\n//             <div className=\"add-details-left\">\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Coin name</label>\n//                 <input name='title'  type=\"text\" value={item.title} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Category id</label>\n//                 <select name='category_id' type=\"text\" value={item.category_id} onChange={(e) => handleInputChange(e)} >\n//                   <option value={\"\"}>Select</option>\n//                   {category && category.map((item)=>(\n//                     <option value={item.id} key={item.name}>{item.name}</option>\n//                   ))}\n//               </select>\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Year of issue</label>\n//                 <input name='year' type=\"text\" value={item.year} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Price</label>\n//                 <input name='price' type=\"text\" value={item.price} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Country</label>\n//                 <input name='issuing_country' type=\"text\" value={item.issuing_country} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Metal</label>\n//                 <input name='composition' type=\"text\" value={item.composition} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//             </div>\n//             <div className=\"add-details-center\">\n//               <div className=\"add-detail-large\">\n//                 <label htmlFor=\"name\">Short description</label>\n//                 <textarea name='short_desc' type=\"text\" value={item.short_desc} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail-large\">\n//                 <label htmlFor=\"name\">Long description</label>\n//                 <textarea name='description' type=\"text\" value={item.description} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Quality of the coin</label>\n//                 <input name='quality' type=\"text\" value={item.quality} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//               <div className=\"add-detail\">\n//                 <label htmlFor=\"name\">Weight</label>\n//                 <input name='weight' type=\"text\" value={item.weight} onChange={(e) => handleInputChange(e)} />\n//               </div>\n//             </div>\n//             <div className=\"add-details-right\">\n//               <div>\n\n//                 <div className=\"add-detail\">\n//                   <label htmlFor=\"name\">Link to obverse image</label>\n//                   <input name='image' type=\"file\"  onChange={(e) => handleUploadImage(e, 'front')} />\n//                 </div>\n//                 {coin[0].image ? (\n//                   <img\n//                     src={coin[0].image}\n//                     alt=\"Монета\"\n//                     style={{\n//                       width: '30%',\n//                     }}\n//                   />\n//                 ) : (\n//                   <div>Изображение отсутствует</div>\n//                 )}\n\n//                 <div className=\"add-detail\">\n//                   <label htmlFor=\"name\">Link to reverse image</label>\n//                   <input name='image2' type=\"file\"  onChange={(e) => handleUploadImage(e, 'reverse')} />\n//                 </div>\n//                   {coin[0].image2 ? (\n//                   <img\n//                     src={coin[0].image2}\n//                     alt=\"Монета\"\n//                     style={{\n//                       width: '30%',\n//                     }}\n//                   />\n//                 ) : (\n//                   <div>Изображение отсутствует</div>\n//                 )}\n//               </div>\n//               <div className='add-btn-container'>\n//                 <button className='blue-button'>Save</button>\n//                 <button onClick={cancelHandle} className='grey-button'>Cancel</button>\n//               </div>\n\n//             </div>\n//           </form>\n//         ))}\n//       </div>\n\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ismay/Desktop/Lahiyə/coin-catalog/front/src/admin/AdminAddCoin/AdminAddCoin2.jsx"],"sourcesContent":["// /* eslint-disable no-unused-vars */\r\n// import React, { useEffect, useState } from 'react'\r\n\r\n// import \"./AdminAddCoin.css\"\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { getCategories, postCoin } from '../../API/Api';\r\n\r\n\r\n// export default function AdminAddCoin() {\r\n//   const navigate = useNavigate()\r\n//   const [category, setCategory] = useState(\"\")\r\n//   const [coin, setCoin] = useState([{\r\n//     title: '',\r\n//     category_id: '',\r\n//     year: '',\r\n//     price: '',\r\n//     issuing_country: '',\r\n//     composition: '',\r\n//     short_desc: '',\r\n//     description: '',\r\n//     quality: '',\r\n//     weight: '',\r\n//     image: '',\r\n//     image2: '',\r\n//   }]);\r\n\r\n\r\n//   useEffect(()=>{\r\n//     getCategories().then((data) => {\r\n//       setCategory(data);\r\n//     })\r\n//   },[])\r\n\r\n//   const cancelHandle = (e) => {\r\n//     e.preventDefault()\r\n//     navigate(-1);\r\n//   }\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n\r\n//     setCoin(coin => ([{\r\n//       ...coin[0],\r\n//       [name]: value,\r\n//     }]));\r\n//   };\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     if (coin[0].title !== \"\") {\r\n//       postCoin(coin[0])\r\n//       navigate('/admin/list');\r\n//     }\r\n//   };\r\n\r\n//   const handleUploadImage = (e, imageType) => {\r\n//     const all=e.target\r\n//     const originFileObj=all.files[0]\r\n \r\n\r\n//     const { name, lastModified, type } = originFileObj;\r\n//     console.log(originFileObj)\r\n//     const nameArr = name.split('.')\r\n//     const finalReferenceName = nameArr[0] + lastModified + '.' + nameArr[1]\r\n//     const storageRef = ref(storage, finalReferenceName);\r\n\r\n//     uploadBytes(storageRef, originFileObj).then((snapshot) => {\r\n//       getDownloadURL(snapshot.ref).then(url => {\r\n//         console.log(url)\r\n\r\n\r\n//         if (imageType === 'front') {\r\n//           setCoin(coin => ([{\r\n//             ...coin[0],\r\n//             image: url\r\n//           }]))\r\n//         } else {\r\n//           setCoin(coin => ([{\r\n//             ...coin[0],\r\n//             image2: url\r\n//           }]))\r\n//         }\r\n//       })\r\n//     })\r\n//   }\r\n\r\n\r\n//   return (\r\n//     <div className='add-containet'>\r\n//       <h1>Admin Panel</h1>\r\n//       <div className=\"add-datails\">\r\n//         {coin && coin.map((item, index) => (\r\n//           <form className='add-form' key={(index)} onSubmit={(e) => handleSubmit(e, item.id)} >\r\n\r\n//             <div className=\"add-details-left\">\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Coin name</label>\r\n//                 <input name='title'  type=\"text\" value={item.title} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Category id</label>\r\n//                 <select name='category_id' type=\"text\" value={item.category_id} onChange={(e) => handleInputChange(e)} >\r\n//                   <option value={\"\"}>Select</option>\r\n//                   {category && category.map((item)=>(\r\n//                     <option value={item.id} key={item.name}>{item.name}</option>\r\n//                   ))}\r\n//               </select>\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Year of issue</label>\r\n//                 <input name='year' type=\"text\" value={item.year} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Price</label>\r\n//                 <input name='price' type=\"text\" value={item.price} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Country</label>\r\n//                 <input name='issuing_country' type=\"text\" value={item.issuing_country} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Metal</label>\r\n//                 <input name='composition' type=\"text\" value={item.composition} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"add-details-center\">\r\n//               <div className=\"add-detail-large\">\r\n//                 <label htmlFor=\"name\">Short description</label>\r\n//                 <textarea name='short_desc' type=\"text\" value={item.short_desc} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail-large\">\r\n//                 <label htmlFor=\"name\">Long description</label>\r\n//                 <textarea name='description' type=\"text\" value={item.description} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Quality of the coin</label>\r\n//                 <input name='quality' type=\"text\" value={item.quality} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//               <div className=\"add-detail\">\r\n//                 <label htmlFor=\"name\">Weight</label>\r\n//                 <input name='weight' type=\"text\" value={item.weight} onChange={(e) => handleInputChange(e)} />\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"add-details-right\">\r\n//               <div>\r\n                \r\n//                 <div className=\"add-detail\">\r\n//                   <label htmlFor=\"name\">Link to obverse image</label>\r\n//                   <input name='image' type=\"file\"  onChange={(e) => handleUploadImage(e, 'front')} />\r\n//                 </div>\r\n//                 {coin[0].image ? (\r\n//                   <img\r\n//                     src={coin[0].image}\r\n//                     alt=\"Монета\"\r\n//                     style={{\r\n//                       width: '30%',\r\n//                     }}\r\n//                   />\r\n//                 ) : (\r\n//                   <div>Изображение отсутствует</div>\r\n//                 )}\r\n\r\n//                 <div className=\"add-detail\">\r\n//                   <label htmlFor=\"name\">Link to reverse image</label>\r\n//                   <input name='image2' type=\"file\"  onChange={(e) => handleUploadImage(e, 'reverse')} />\r\n//                 </div>\r\n//                   {coin[0].image2 ? (\r\n//                   <img\r\n//                     src={coin[0].image2}\r\n//                     alt=\"Монета\"\r\n//                     style={{\r\n//                       width: '30%',\r\n//                     }}\r\n//                   />\r\n//                 ) : (\r\n//                   <div>Изображение отсутствует</div>\r\n//                 )}\r\n//               </div>\r\n//               <div className='add-btn-container'>\r\n//                 <button className='blue-button'>Save</button>\r\n//                 <button onClick={cancelHandle} className='grey-button'>Cancel</button>\r\n//               </div>\r\n\r\n//             </div>\r\n//           </form>\r\n//         ))}\r\n//       </div>\r\n\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}