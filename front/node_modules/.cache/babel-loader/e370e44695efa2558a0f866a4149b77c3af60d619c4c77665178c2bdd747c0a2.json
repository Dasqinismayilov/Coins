{"ast":null,"code":"const baseUrl = 'https://coins-express-mysql-admin-panel.vercel.app';\n// const baseUrl = 'http://localhost:3001'\n\nconst getCategories = async () => {\n  const res = await fetch(`${baseUrl}/categories`);\n  const data = await res.json();\n  console.log(data);\n  if (res.ok) {\n    return data;\n  } else {\n    throw new Error('Failed to fetch categories');\n  }\n};\nconst getDetail = async (id, coinId) => {\n  const res = await fetch(`${baseUrl}/categories/${id}/${coinId}`);\n  const data = await res.json();\n  if (res.ok) {\n    console.log(data);\n    return data;\n  } else {\n    throw new Error('Failed to fetch coin detail');\n  }\n};\nconst getCoin = async id => {\n  const res = await fetch(`${baseUrl}/all/${id}`);\n  const data = await res.json();\n  if (res.ok) {\n    return data;\n  } else {\n    throw new Error('Failed to fetch coin');\n  }\n};\nconst getAllCoins = async () => {\n  const res = await fetch(`${baseUrl}/all`);\n  const data = await res.json();\n  return data;\n};\nconst getOptions = async () => {\n  const res = await fetch(`${baseUrl}/options`);\n  const data = await res.json();\n  return data;\n};\nconst getSearch = async (categoryId, searchQuery) => {\n  //get category\n  if (categoryId) {\n    const res = await fetch(`${baseUrl}/categories/${categoryId}`);\n    const data = await res.json();\n    return data;\n  }\n  //get filteret coins\n  else {\n    const res = await fetch(`${baseUrl}/search?${searchQuery}`);\n    const data = await res.json();\n    return data;\n  }\n};\nconst deleteCoin = async id => {\n  try {\n    const res = await fetch(`${baseUrl}/all/${id}`, {\n      method: 'DELETE'\n    });\n    const data = await res.json();\n    console.log(data); //___??????????????????\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst putCoin = async (id, coin) => {\n  console.log(id, coin);\n  // const coinObject = coin[0]\n  try {\n    const res = await fetch(`${baseUrl}/all/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(coin)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst postCoin = async coin => {\n  console.log(coin);\n  try {\n    const res = await fetch(`${baseUrl}/all`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(coin)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst postAcces = async acces => {\n  console.log(acces);\n  const res = await fetch(`${baseUrl}/acces`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(acces)\n  });\n  const data = await res.json();\n  console.log(data);\n  return data;\n};\nexport { getAllCoins, getCategories, getCoin, getDetail, getSearch, deleteCoin, putCoin, postCoin, postAcces, getOptions };","map":{"version":3,"names":["baseUrl","getCategories","res","fetch","data","json","console","log","ok","Error","getDetail","id","coinId","getCoin","getAllCoins","getOptions","getSearch","categoryId","searchQuery","deleteCoin","method","error","putCoin","coin","headers","body","JSON","stringify","postCoin","postAcces","acces"],"sources":["C:/Users/ismay/Desktop/Yeni klasÃ¶r (7)/mrm 3/coins-express-mysql-adminPanel/front/src/API/Api.js"],"sourcesContent":["const baseUrl = 'https://coins-express-mysql-admin-panel.vercel.app'\r\n// const baseUrl = 'http://localhost:3001'\r\n\r\n\r\n\r\nconst getCategories = async () => {\r\n  const res = await fetch(`${baseUrl}/categories`);\r\n  const data = await res.json();\r\n  console.log(data )\r\n  if (res.ok) {\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch categories');\r\n  }\r\n};\r\n\r\nconst getDetail = async (id, coinId) => {\r\n  const res = await fetch(`${baseUrl}/categories/${id}/${coinId}`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    console.log(data);\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch coin detail');\r\n  }\r\n};\r\n\r\nconst getCoin = async (id) => {\r\n  const res = await fetch(`${baseUrl}/all/${id}`);\r\n  const data = await res.json();\r\n  if (res.ok) {\r\n    return data;\r\n  } else {\r\n    throw new Error('Failed to fetch coin');\r\n  }\r\n};\r\n\r\nconst getAllCoins = async () => {\r\n  const res = await fetch(`${baseUrl}/all`);\r\n  const data = await res.json();\r\n  return data\r\n}\r\nconst getOptions = async () => {\r\n  const res = await fetch(`${baseUrl}/options`);\r\n  const data = await res.json();\r\n  return data\r\n}\r\n\r\n\r\n\r\nconst getSearch = async (categoryId, searchQuery) => {\r\n  //get category\r\n  if (categoryId) {\r\n    const res = await fetch(`${baseUrl}/categories/${categoryId}`);\r\n    const data = await res.json();\r\n    return data\r\n  }\r\n  //get filteret coins\r\n  else {\r\n    const res = await fetch(`${baseUrl}/search?${searchQuery}`);\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n}\r\n\r\n\r\nconst deleteCoin = async (id) => {\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    const data = await res.json()\r\n    console.log(data)                                //___??????????????????\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst putCoin = async (id, coin) => {\r\n  console.log(id, coin)\r\n  // const coinObject = coin[0]\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coin)\r\n    });\r\n    const data = await res.json();\r\n    return data\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nconst postCoin = async (coin) => {\r\n  console.log(coin)\r\n\r\n  try {\r\n    const res = await fetch(`${baseUrl}/all`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coin)\r\n    });\r\n    const data = await res.json();\r\n    return data\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nconst postAcces = async (acces) => {\r\n  console.log(acces)\r\n  const res = await fetch(`${baseUrl}/acces`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(acces)\r\n  });\r\n  const data = await res.json();\r\n  console.log(data)\r\n  return data;\r\n};\r\n\r\nexport { getAllCoins, getCategories, getCoin, getDetail, getSearch, deleteCoin, putCoin, postCoin, postAcces,getOptions }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}